1. private로 선언된 필드에 접근한 방법에 대해서 설명하세요.

private로 선언된 필드가 있는 클래스 내에서 getter / setter 메서드를 만들어 접근 할 수 있습니다.

2. 기본형/참조형 매개변수와 기본형/참조형 반환타입에 대해서 설명하세요.  ( 개념 )

이름 그대로 기본 자료형에 속하는 자료형(기본형)으로 매개변수를 넣은 것과 메서드 반환타입을 가지게 되면 기본형 매개변수 / 기본형 반환타입 이고,
참조 자료형에 속하는 자료형(참조형)으로 매개변수, 메서드 반환타입일 경우 참조형 매개변수 / 참조형 반환타입입니다.



3. 생성자에 대해서 설명하세요.

일종의 메서드이고, 리턴을 쓰지 않으며, 파일명과 생성자명이 동일해야합니다.
만약 생성자가 하나도 정의되어 있지 않다면, 디폴트 생성자가 자동으로 생성됩니다.
오버로딩이 가능하고, 필드의 초기화를 목적으로 만들어집니다. 접근 지정자를 사용할 수 있습니다.

4. this 키워드에 대해서 설명하세요.

인스턴스가 생성되면 본인을 참조하기 위해 사용되는 참조변수입니다.(본인의 주소값 가짐)
멤버를 가리킬때의 this , 생성자에서 또다른 생성자를 호출할때 this , 매개변수나 리턴값에 사용되는 경우가 있습니다.


5. 아래 코딩을 클래스( 객체) 배열 초기화를 사용해서 코딩하세요 
		Student s1 = new Student();
		Student s2 = new Student();
		Student s3 = new Student();

Student [] studentArr = {
			new Student(),
			new Student(),
			new Student()
			};

6. 객체 복사(copy)와 객체 복제(clone)에 대해서 설명하세요.. 

객체 복사의 경우 어떠한 객체의 주소값을 복사한것을 의미하고, 객체 복제의 경우 새로운 객체를 생성해 어떠한 객체의 값을 복제하는것을 의미합니다.


7. 에러 메시지 : The constructor System() [is not visible] 에 대해서 설명하세요.

접근지정자로 인해 보이지 않는 경우(접근 불가능)에 나타나는 에러메시지로, 
접근지정자를 바꾸거나 getter / setter 등을 이용해서 해결합니다.

8. [static 키워드]에 대해서 설명하세요. 

클래스 앞, 메서드 앞, 필드 앞에 사용이 가능하며 프로그램에 꼭 필요한 메서드라면 메서드 앞에 붙이고, 굳이 객체를 생성하지 않아도 함수 사용이 가능합니다. 


9. "가변인자와 오버로딩"에 대해서 설명하세요.

가변인자는 이름그대로 변하는게 가능하다는 의미로, 정적이지 않고 동적인 인자입니다.
오버로딩은 이름은 같지만 매개변수가 다른 경우 나타나며, 리턴값은 이에 해당되지 않습니다.
 
10. 아래 두 문자열의 대소문자 구분 없이, 순서 상관 없이 같은 문자여부를 체크하는 코딩을 하세요. 
	String n = "keNik";   
	String m= "kKnie";    




		String n = "keNik"; String m= "kKnie"; 
		
		char[] nArr=n.toLowerCase().toCharArray();
		char[] mArr=m.toLowerCase().toCharArray();
		
		Arrays.sort(mArr);
		Arrays.sort(nArr);
		
		m = String.valueOf(mArr);
		n = String.valueOf(nArr);
		
		System.out.println(n.equals(m));

