
1. 오류메시지에 대한 설명을 하세요 .
  ㄱ. The local variable age may not have been initialized
 : 지역변수인 age가 초기화되지 않았다
  ㄴ. age cannot be resolved to a variable
: age 변수가 정의되지 않았다
  ㄷ. The left-hand side of an assignment must be a variable
:  변수 할당 시 왼쪽에는 변수만 와야한다
  ㄹ. Type mismatch: cannot convert from int to boolean
: 타입이 맞지않음, int -> boolean 변경 불가
  ㅁ. Duplicate local variable age
: age라는 동일한 변수명을 가진 지역변수가 존재
  
2. 지역변수( Local Variable ) 에 대해서 설명하세요.
메서드, 생성자, 블록 등에서 선언된 변수이다. 선언되어있는 한 블록내에서만 사용가능하다.
   
3. 자료형( Data Type )에 대해서 설명하세요.
  1) 정의 : 저장할 공간의 크기와 형식을 지정해주는 것
  2) 종류 :  1. 기본자료형
			1) 숫자형
				(1) 정수형
					byte(1), short(2), int(4), long(8), char(2)
				(2) 실수형
					float(4), double(8)
			2) 논리형 - boolean(1)
		2. 참조자료형 - 배열, 클래스, 인터페이스
  

4. 이름, 나이, 학점, 성별 관련 변수를 선언및 초기화하고, 출력하세요. 
    
    조건1) printf() 메서드 사용
    조건2) 출력 형식은    ">이름:"홍길동", 나이:20, 학점:'A', 성별:true" 

String name = "홍길동";
byte age = 20;
char grade = 'A';
boolean gender = true;
		
System.out.printf(">이름:\"%s\", 나이:%d, 학점:'%c', 성별:%b", name, age, grade, gender);
   
5.  두 정수 x,y 변수를 선언하고 각각 1,2로 초기화하고  출력하고,
    두 값을 교환하고 x,y 값을 출력하는 코딩을 하세요.

byte x = 1, y = 2, temp;
		
System.out.printf("x = %d, y = %d\n", x,y);
		
temp = x;
x = y;
y = temp;
		
System.out.printf("x = %d, y = %d", x,y);

     
6.  + 연산  결과를 적으세요.
   ㄱ. 3 + 5 + 0   = 8
   ㄴ. 3 + 5 + "0"  =  "80"    ---> 문자열이니까 " " 빼먹지 말기
   ㄴ. 3 + 5 + '0'   = 8+48 = 56
 
7.  나이와 국어점수를 저장할 변수를 선언하세요 ...
byte age, kor;
               
8. 개행( 줄바꿈 ) 하는 코딩을 모두 적으세요. 
   ㄱ.  '\n' . '\r' 제어문자
   ㄴ.  System.out.println();
 
9. 이름을 표준입력장치(키보드)로 부터 입력받아서   출력하는 코딩을 하세요. 
     
     [입력형식]
     > 이름을 입력하세요 ? _
     
     [출력형식]
     > 이름은 "홍길동"입니다.

public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		System.out.print("> 이름을 입력하세요 ? ");
		String name = br.readLine();
		System.out.printf("> 이름은 \"%s\"입니다.", name);
			
	}

 
10.  printf(String format, Object...args) 함수의 String format 매개변수의 
      %Conversion 에 대해서 적으세요. 
      ㄱ. String 일 때 사용하는 Conversion : s
      ㄴ. char 일 때 사용하는 Conversion :   c C
      ㄷ. boolean 일 때 사용하는 Conversion :  b B
      ㄹ. byte, short, int, long 일 때 사용하는 Conversion :   d o x (O X 도 가능)
      ㅁ. float, double 일 때 사용하는 Conversion : f e g a

11.	double money = 1234569.7089
    소수점 2자리까지 출력
    세 자리마다 콤마(,) 출력하는 코딩을 하세요 . 

double money = 1234569.7089;
System.out.printf("%,.2f",money);

12. char a = 'x';
    char b;    
    a 변수의 값을 대문자로 변환싴켜서 b 변수에 저장 후 출력하는 코딩을 하세요.

char a = 'x';
char b = (char) (a - 32);
		
System.out.println(b);


**** char b = a - 32; 는 오류가 나는 이유***** ( 수업 내용엔 없었지만 - 수업3일차 참고 )

- 자바에서 char 타입은 내부적으로 정수로 처리 , char 타입에 대해 산술 연산(예: +, -)을 수행하면, 자바는 내부적으로 char 값을 int로 변환해서 연산을 수행
1) char b = (char) (a - 32); 의 경우 
  : a (char)가 **int**로 변환되어 120 - 32 = 88이 계산
  -> 결과는 int 타입이지만 (char)로 명시적 형 변환을 통해 다시 char로 변환
2) char b = 'x' - 32; 의 경우
  : 'x'는 리터럴 char이고, - 32 연산으로 int 값 88이 계산
  - > 이 경우에도 결과가 int이지만, 컴파일러가 암시적으로 타입 변환을 허용
     ( 리터럴 연산에 대해 자바 컴파일러가 결과를 char 타입에 맞는지 확인하고 안전하면 자동 변환)
3) char b = a - 32; 의 경우
  : a - 32는 여전히 int 값 88을 반환
  - > 연산은 88로 같지만, 변수와의 연산 결과는 컴파일러가 자동으로 char로 변환X
      자바는 암시적 형 변환을 엄격히 제한, 리터럴 연산처럼 안전성을 보장할 수 없기때문.

== > 리터럴 연산의 경우 암시적 타입 변환을 허용하지만 변수 연산의 경우 암시적 타입 변환이 제한되기 때문에 명시적 형 변환이 필요하다.

====> 3일차 내용으로 인한 추가 내용
   : 내부적 cpu 계산은 int형으로 되기 때문에 오류가 나는 듯 하다?
     -> int로 계산이 되고 char는 더 작은 자료형이라 오류나는듯


13. 국어 점수를 입력받아서 입력받은 국어 점수를 출력하는 코딩을 하세요.
 
public static void main(String[] args) throws NumberFormatException, IOException{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		System.out.print("> 국어점수 입력 : ");
		byte kor = Byte.parseByte(br.readLine());
		
		System.out.printf("국어점수 : %d",kor);
		
	}


                    
																															


                    