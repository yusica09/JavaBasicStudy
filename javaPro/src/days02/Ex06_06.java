package days02;

/**
 * @author yusica
 * @data 2024. 12. 24. - 오후 3:18:15
 * @subject char 문자열 , 음수 표현방법
 * @content
 */
public class Ex06_06 {

	public static void main(String[] args) {
		// 정수계열 포함
		// 문자 : char 유니코드 2byte
		//			0 ~ 65535 정수값 ->
		
		// 메모리 : 10 정수 -> 2진수 변환 -> 00001010
		// 'A' -> 문자코드표(65) -> 10진수 정수 -> 2진수변환
		// 'a' = 97 ,'0' = 48
		
		// 0             0000 0000
		//'0'   48      0011 0000
		// 위의 두 결과를 봤을때 값이 다르다.
		char one = 'A'; //65
		
		// [음수 표현방법]
		byte b = -10;
		// 1. 부호의 절대치
		//     |-10| = 10 = 0000 1010 => [1]000 1010
		
		// 2. 1의 보수법
		// 		1) 부호의 절대치 - 0000 1010 
		// 		2) 보수              1111 0101
		// 3. (현재) 2의 보수법
		//      1) 부호의 절대치 - 0000 1010
		//		 2) 보수              1111 0101
		//		 3)   +							 1
		//        ---------------------------------
		//              				1111 0110
		
		// [문제] 어떤 음수가 2의 보수법 저장 : 1010 1010
		//			음수 ? 
		//  먼저 1을 빼면 1010 1001
		//  보수를 생각해서 부호의 절대치는 0101 0110
		//  2^6 + 2^4 + 2^2 + 2^1 = 64+16+4+2 = 86 , -86
		
	}

}
